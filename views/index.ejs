<html lang="en">
    <%- include('./partials/headInfo.ejs') %>
    <body>
        <%- include('./partials/header.ejs') %>
        <main>
            <div>
                <%- include('./partials/IndexBanner.ejs', { query: query, selectedDatabases: selectedDatabases, user: user }) %>
                <section id="Content">
                    <h2>Results:</h2>
                    <div id="Results">
                        <% records.forEach(record => { %>
                            <div class="Vinyl">
                                <div class="Vinyl-inner">
                                    <div class="Vinyl-front">
                                        <h3><%= record.title %></h3>
                                        <p><%= record.artist %></p>
                                    </div>
                                    <div class="Vinyl-back">
                                        <h3><%= record.title %></h3>
                                        <p><%= record.description %></p>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </section>
            </div>
        </main>
        <%- include('./partials/footer.ejs') %>
        
        <script>
            document.getElementById('searchForm').addEventListener('submit', async function(event) {
                event.preventDefault(); // Prevent the default form submission

                const formData = new FormData(this);

                try {
                    const response = await fetch('/search', {
                        method: 'POST',
                        body: new URLSearchParams(formData),
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                    });

                    if (response.ok) {
                        const result = await response.text();
                        // Replace the content inside the #Results container
                        document.getElementById('Results').innerHTML = result;
                        setupVinylClickHandlers(); // Reinitialize click handlers if needed
                    } else {
                        console.error('Error performing search');
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            });

            // Function to generate a random color for the vinyl gradient
            function getRandomColor() {
                const letters = '0123456789ABCDEF';
                let color = '#';
                for (let i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }

            // Function to apply a random gradient to the vinyl
            function applyRandomGradient(element) {
                const color1 = getRandomColor();
                const color2 = getRandomColor();
                const vinylFront = element.querySelector('.Vinyl-front');
                vinylFront.style.background = `linear-gradient(to bottom right, ${color1}, ${color2})`;
            }

            // Function to toggle the vinyl element
            function toggleVinyl(event) {
                // Prevent the default click behavior
                event.preventDefault();

                // Get all vinyl elements
                const vinylElements = document.getElementsByClassName('Vinyl');
                const vinylElement = this;
                const vinylInner = vinylElement.querySelector('.Vinyl-inner');

                // Collapse all vinyl elements except the clicked one
                for (let i = 0; i < vinylElements.length; i++) {
                    const vinyl = vinylElements[i];
                    const inner = vinyl.querySelector('.Vinyl-inner');
                    if (vinyl !== vinylElement) {
                        vinyl.classList.remove('expanded');
                        inner.classList.remove('flipped');
                    }
                }

                // Toggle the clicked vinyl element
                if (vinylElement.classList.contains('expanded')) {
                    vinylElement.classList.remove('expanded');
                    vinylInner.classList.remove('flipped');
                } else {
                    vinylElement.classList.add('expanded');
                    vinylInner.classList.add('flipped');
                }
            }

            // Function to setup click handlers for the vinyl elements
            function setupVinylClickHandlers() {
                const vinylElements = document.getElementsByClassName('Vinyl');
                for (let i = 0; i < vinylElements.length; i++) {
                    const vinyl = vinylElements[i];
                    applyRandomGradient(vinyl);

                    vinyl.addEventListener('click', toggleVinyl);
                }
            }
            //ensure the window is loaded before setting up the click handlers
            window.onload = setupVinylClickHandlers;
        </script>
    </body>
</html>
